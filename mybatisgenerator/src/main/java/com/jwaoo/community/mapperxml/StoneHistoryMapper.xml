<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jwaoo.community.mapper.StoneHistoryMapper">
  <resultMap id="BaseResultMap" type="com.jwaoo.community.model.StoneHistory">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="reason" jdbcType="INTEGER" property="reason" />
    <result column="reason_param" jdbcType="BIGINT" property="reasonParam" />
    <result column="reason_detail" jdbcType="VARCHAR" property="reasonDetail" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="object_id" jdbcType="BIGINT" property="objectId" />
    <result column="os_type" jdbcType="TINYINT" property="osType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uid, reason, reason_param, reason_detail, num, object_id, os_type, create_time
  </sql>
  <select id="selectByExample" parameterType="com.jwaoo.community.model.StoneHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stone_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.jwaoo.community.model.StoneHistoryExample">
    delete from stone_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jwaoo.community.model.StoneHistory">
    insert into stone_history (id, uid, reason, 
      reason_param, reason_detail, num, 
      object_id, os_type, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, #{reason,jdbcType=INTEGER}, 
      #{reasonParam,jdbcType=BIGINT}, #{reasonDetail,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER}, 
      #{objectId,jdbcType=BIGINT}, #{osType,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jwaoo.community.model.StoneHistory">
    insert into stone_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="reasonParam != null">
        reason_param,
      </if>
      <if test="reasonDetail != null">
        reason_detail,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="objectId != null">
        object_id,
      </if>
      <if test="osType != null">
        os_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=INTEGER},
      </if>
      <if test="reasonParam != null">
        #{reasonParam,jdbcType=BIGINT},
      </if>
      <if test="reasonDetail != null">
        #{reasonDetail,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="objectId != null">
        #{objectId,jdbcType=BIGINT},
      </if>
      <if test="osType != null">
        #{osType,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jwaoo.community.model.StoneHistoryExample" resultType="java.lang.Long">
    select count(*) from stone_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update stone_history
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=INTEGER},
      </if>
      <if test="record.reasonParam != null">
        reason_param = #{record.reasonParam,jdbcType=BIGINT},
      </if>
      <if test="record.reasonDetail != null">
        reason_detail = #{record.reasonDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.objectId != null">
        object_id = #{record.objectId,jdbcType=BIGINT},
      </if>
      <if test="record.osType != null">
        os_type = #{record.osType,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update stone_history
    set id = #{record.id,jdbcType=BIGINT},
      uid = #{record.uid,jdbcType=BIGINT},
      reason = #{record.reason,jdbcType=INTEGER},
      reason_param = #{record.reasonParam,jdbcType=BIGINT},
      reason_detail = #{record.reasonDetail,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      object_id = #{record.objectId,jdbcType=BIGINT},
      os_type = #{record.osType,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.jwaoo.community.model.StoneHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stone_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>