<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jwaoo.community.mapper.TopicMapper">
  <resultMap id="BaseResultMap" type="com.jwaoo.community.model.Topic">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="view_count" jdbcType="BIGINT" property="viewCount" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="user_agent" jdbcType="VARCHAR" property="userAgent" />
    <result column="show_urls" jdbcType="VARCHAR" property="showUrls" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="praise_count" jdbcType="BIGINT" property="praiseCount" />
    <result column="reply_count" jdbcType="BIGINT" property="replyCount" />
    <result column="forward_count" jdbcType="BIGINT" property="forwardCount" />
    <result column="reposted" jdbcType="TINYINT" property="reposted" />
    <result column="level" jdbcType="TINYINT" property="level" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="is_top" jdbcType="TINYINT" property="isTop" />
    <result column="is_hotlists" jdbcType="TINYINT" property="isHotlists" />
    <result column="is_verify" jdbcType="TINYINT" property="isVerify" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jwaoo.community.model.Topic">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, view_count, uid, user_agent, show_urls, type, praise_count, reply_count, 
    forward_count, reposted, level, tags, location, longitude, latitude, parent_id, is_top, 
    is_hotlists, is_verify, status, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.jwaoo.community.model.TopicExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.jwaoo.community.model.TopicExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.jwaoo.community.model.TopicExample">
    delete from topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jwaoo.community.model.Topic">
    insert into topic (id, title, view_count, 
      uid, user_agent, show_urls, 
      type, praise_count, reply_count, 
      forward_count, reposted, level, 
      tags, location, longitude, 
      latitude, parent_id, is_top, 
      is_hotlists, is_verify, status, 
      create_time, update_time, content
      )
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{viewCount,jdbcType=BIGINT}, 
      #{uid,jdbcType=BIGINT}, #{userAgent,jdbcType=VARCHAR}, #{showUrls,jdbcType=VARCHAR}, 
      #{type,jdbcType=TINYINT}, #{praiseCount,jdbcType=BIGINT}, #{replyCount,jdbcType=BIGINT}, 
      #{forwardCount,jdbcType=BIGINT}, #{reposted,jdbcType=TINYINT}, #{level,jdbcType=TINYINT}, 
      #{tags,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, #{longitude,jdbcType=DECIMAL}, 
      #{latitude,jdbcType=DECIMAL}, #{parentId,jdbcType=BIGINT}, #{isTop,jdbcType=TINYINT}, 
      #{isHotlists,jdbcType=TINYINT}, #{isVerify,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jwaoo.community.model.Topic">
    insert into topic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="viewCount != null">
        view_count,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="userAgent != null">
        user_agent,
      </if>
      <if test="showUrls != null">
        show_urls,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="praiseCount != null">
        praise_count,
      </if>
      <if test="replyCount != null">
        reply_count,
      </if>
      <if test="forwardCount != null">
        forward_count,
      </if>
      <if test="reposted != null">
        reposted,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="tags != null">
        tags,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="isTop != null">
        is_top,
      </if>
      <if test="isHotlists != null">
        is_hotlists,
      </if>
      <if test="isVerify != null">
        is_verify,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="viewCount != null">
        #{viewCount,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="userAgent != null">
        #{userAgent,jdbcType=VARCHAR},
      </if>
      <if test="showUrls != null">
        #{showUrls,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="praiseCount != null">
        #{praiseCount,jdbcType=BIGINT},
      </if>
      <if test="replyCount != null">
        #{replyCount,jdbcType=BIGINT},
      </if>
      <if test="forwardCount != null">
        #{forwardCount,jdbcType=BIGINT},
      </if>
      <if test="reposted != null">
        #{reposted,jdbcType=TINYINT},
      </if>
      <if test="level != null">
        #{level,jdbcType=TINYINT},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="isTop != null">
        #{isTop,jdbcType=TINYINT},
      </if>
      <if test="isHotlists != null">
        #{isHotlists,jdbcType=TINYINT},
      </if>
      <if test="isVerify != null">
        #{isVerify,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jwaoo.community.model.TopicExample" resultType="java.lang.Long">
    select count(*) from topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update topic
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.viewCount != null">
        view_count = #{record.viewCount,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.userAgent != null">
        user_agent = #{record.userAgent,jdbcType=VARCHAR},
      </if>
      <if test="record.showUrls != null">
        show_urls = #{record.showUrls,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.praiseCount != null">
        praise_count = #{record.praiseCount,jdbcType=BIGINT},
      </if>
      <if test="record.replyCount != null">
        reply_count = #{record.replyCount,jdbcType=BIGINT},
      </if>
      <if test="record.forwardCount != null">
        forward_count = #{record.forwardCount,jdbcType=BIGINT},
      </if>
      <if test="record.reposted != null">
        reposted = #{record.reposted,jdbcType=TINYINT},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=TINYINT},
      </if>
      <if test="record.tags != null">
        tags = #{record.tags,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=DECIMAL},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=DECIMAL},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.isTop != null">
        is_top = #{record.isTop,jdbcType=TINYINT},
      </if>
      <if test="record.isHotlists != null">
        is_hotlists = #{record.isHotlists,jdbcType=TINYINT},
      </if>
      <if test="record.isVerify != null">
        is_verify = #{record.isVerify,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update topic
    set id = #{record.id,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      view_count = #{record.viewCount,jdbcType=BIGINT},
      uid = #{record.uid,jdbcType=BIGINT},
      user_agent = #{record.userAgent,jdbcType=VARCHAR},
      show_urls = #{record.showUrls,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      praise_count = #{record.praiseCount,jdbcType=BIGINT},
      reply_count = #{record.replyCount,jdbcType=BIGINT},
      forward_count = #{record.forwardCount,jdbcType=BIGINT},
      reposted = #{record.reposted,jdbcType=TINYINT},
      level = #{record.level,jdbcType=TINYINT},
      tags = #{record.tags,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=DECIMAL},
      latitude = #{record.latitude,jdbcType=DECIMAL},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      is_top = #{record.isTop,jdbcType=TINYINT},
      is_hotlists = #{record.isHotlists,jdbcType=TINYINT},
      is_verify = #{record.isVerify,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update topic
    set id = #{record.id,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      view_count = #{record.viewCount,jdbcType=BIGINT},
      uid = #{record.uid,jdbcType=BIGINT},
      user_agent = #{record.userAgent,jdbcType=VARCHAR},
      show_urls = #{record.showUrls,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      praise_count = #{record.praiseCount,jdbcType=BIGINT},
      reply_count = #{record.replyCount,jdbcType=BIGINT},
      forward_count = #{record.forwardCount,jdbcType=BIGINT},
      reposted = #{record.reposted,jdbcType=TINYINT},
      level = #{record.level,jdbcType=TINYINT},
      tags = #{record.tags,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=DECIMAL},
      latitude = #{record.latitude,jdbcType=DECIMAL},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      is_top = #{record.isTop,jdbcType=TINYINT},
      is_hotlists = #{record.isHotlists,jdbcType=TINYINT},
      is_verify = #{record.isVerify,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="com.jwaoo.community.model.TopicExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="com.jwaoo.community.model.TopicExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>